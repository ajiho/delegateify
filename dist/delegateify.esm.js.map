{"version":3,"file":"delegateify.esm.js","sources":["../src/js/utils/index.js","../src/js/index.js"],"sourcesContent":["export default {\r\n\r\n\r\n    throw_Error(msg) {\r\n        throw new Error(`Delegateify: ${msg}`);\r\n    },\r\n\r\n    contains(set, subSet) {\r\n        for (let i = 0; i < subSet.length; i++) {\r\n            if (set.indexOf(subSet[i]) === -1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    contains2(set, subSet) {\r\n        return subSet.every(item => set.includes(item));\r\n    }\r\n\r\n}","import utils from \"./utils\";\r\n\r\nlet i = 0\r\n\r\nclass Delegateify {\r\n  element\r\n  #namespace = 'delegateify'\r\n  #id\r\n  #scopedSelectorRegex = /^\\s*(>|:scope\\s*>)/\r\n  #listenersByType\r\n  #allListeners = []\r\n  //存储id的key\r\n  #idKey = `__${this.#namespace}Id__`\r\n  //路径的key\r\n  #pathKey\r\n\r\n  #stopPropagationKey = `_${this.#namespace}PropagationStopped`\r\n  #stopImmediatePropagationKey = `_${this.#namespace}ImmediatePropagationStopped`\r\n\r\n  #captureListener\r\n  #bubbleListener\r\n\r\n  constructor(selector) {\r\n\r\n    this.element = typeof selector === 'string' ? document.querySelector(selector) : selector;\r\n\r\n    // 事件名称到事件数组的映射\r\n    // 不要从 Object 继承，这样我们就不会与其原型上的属性发生冲突\r\n    this.#listenersByType = Object.create(null);\r\n\r\n    /*\r\n  该实例跟踪的所有侦听器对象的列表\r\n       每个项目采用以下形式：\r\n      {\r\n        eventName: String,\r\n        handler: Function,\r\n        namespaces: Array<string>,\r\n        selector: String | null,\r\n        useCapture: Boolean,\r\n        isScoped: Boolean\r\n      }\r\n    */\r\n\r\n    // 确保this的值\r\n    this.#captureListener = this.#executeCaptureListener.bind(this);\r\n    this.#bubbleListener = this.#executeBubbleListener.bind(this);\r\n\r\n    // 所有实例都会获得一个ID\r\n    this.#id = i++;\r\n    this.#pathKey = `_${this.#namespace}Path${this.#id}`\r\n\r\n\r\n  }\r\n\r\n\r\n  on(eventName, selector, handler, useCapture) {\r\n    if (typeof selector === 'function') {\r\n      useCapture = handler;\r\n      handler = selector;\r\n      selector = null;\r\n    }\r\n\r\n    if (typeof handler !== 'function') {\r\n      utils.throw_Error('无法使用非函数处理程序添加侦听器')\r\n    }\r\n\r\n    // 如果每个假值（未定义或传递空字符串）则为空\r\n    if (!selector) {\r\n      selector = null;\r\n    }\r\n\r\n\r\n    if (typeof useCapture === 'undefined') {\r\n      // 强制使用Capture进行焦点和模糊事件\r\n      if (eventName === 'focus' || eventName === 'blur') {\r\n        // 默认情况下 true 仅适用于焦点和模糊事件\r\n        useCapture = true;\r\n      }\r\n      else {\r\n        // 默认为 false\r\n        // 这与 HTML API 匹配\r\n        useCapture = false;\r\n      }\r\n    }\r\n\r\n    // 提取命名空间\r\n    let namespaces = null;\r\n    let dotIndex = eventName.indexOf('.');\r\n    if (dotIndex !== -1) {\r\n      namespaces = eventName.slice(dotIndex + 1).split('.');\r\n      eventName = eventName.slice(0, dotIndex);\r\n    }\r\n\r\n    // 获取/创建事件类型的列表\r\n    let listenerList = this.#listenersByType[eventName];\r\n    if (!listenerList) {\r\n      listenerList = this.#listenersByType[eventName] = [];\r\n\r\n      // 添加实际的监听器\r\n      this.element.addEventListener(eventName, this.#captureListener, true);\r\n      this.element.addEventListener(eventName, this.#bubbleListener, false);\r\n    }\r\n\r\n    // 如果选择器有作用域，则设置特殊 ID 属性\r\n    let listenerIsScoped = this.#isScoped(selector);\r\n    if (listenerIsScoped) {\r\n      // 规范化选择器，使其不使用 :scope\r\n      selector = selector.replace(scopedSelectorRegex, '>');\r\n\r\n      // 存储唯一 ID 并设置我们将用于范围的特殊属性\r\n      this.element.setAttribute(this.#idKey, this.#id);\r\n    }\r\n\r\n    // 使用事件信息创建一个对象\r\n    const eventObject = {\r\n      eventName: eventName,\r\n      handler: handler,\r\n      namespaces: namespaces,\r\n      selector: selector,\r\n      useCapture: useCapture,\r\n      isScoped: listenerIsScoped\r\n    };\r\n\r\n    // 相对于当前类型并与其他类型一起存储\r\n    listenerList.push(eventObject);\r\n    this.#allListeners.push(eventObject);\r\n  }\r\n\r\n\r\n  off(eventName, selector, handler, useCapture) {\r\n    if (typeof selector === 'function') {\r\n      useCapture = handler;\r\n      handler = selector;\r\n      selector = null;\r\n    }\r\n\r\n    // 如果没有提供则为空\r\n    if (typeof eventName === 'undefined') {\r\n      eventName = null;\r\n    }\r\n\r\n    if (typeof selector === 'undefined') {\r\n      selector = null;\r\n    }\r\n\r\n    if (typeof handler === 'undefined') {\r\n      handler = null;\r\n    }\r\n\r\n    if (typeof useCapture === 'undefined') {\r\n      useCapture = null;\r\n    }\r\n\r\n    // 提取命名空间\r\n    let namespaces = null;\r\n    if (eventName) {\r\n      let dotIndex = eventName.indexOf('.');\r\n      if (dotIndex !== -1) {\r\n        namespaces = eventName.slice(dotIndex + 1).split('.');\r\n        eventName = eventName.slice(0, dotIndex);\r\n      }\r\n    }\r\n\r\n    // 为空\r\n    if (eventName === '') {\r\n      eventName = null;\r\n    }\r\n\r\n    let listener;\r\n    let index;\r\n    let listeners = this.#allListeners;\r\n\r\n    for (var i = 0; i < listeners.length; i++) {\r\n      listener = listeners[i];\r\n\r\n      if (\r\n        (eventName === null || listener.eventName === eventName) &&\r\n        (selector === null || listener.selector === selector) &&\r\n        (handler === null || listener.handler === handler) &&\r\n        (useCapture === null || listener.useCapture === useCapture) &&\r\n        (\r\n          // 删除匹配的侦听器，无论命名空间如何\r\n          namespaces === null ||\r\n          // 监听器匹配所有指定的命名空间\r\n          (listener.namespaces && utils.contains(listener.namespaces, namespaces))\r\n        )\r\n      ) {\r\n        // 删除监听信息\r\n        this.#allListeners.splice(i, 1);\r\n\r\n        // 数组长度已更改，因此在下一次迭代时检查相同的索引\r\n        i--;\r\n\r\n        // 获取listenersByType映射中的索引\r\n        if (!this.#listenersByType[listener.eventName]) {\r\n          utils.throw_Error(`缺少 ListenersByType 的${listener.eventName}`)\r\n        }\r\n\r\n        // 在其他查找列表中查找事件信息\r\n        index = this.#listenersByType[listener.eventName].indexOf(listener);\r\n        if (index !== -1) {\r\n          var mapList = this.#listenersByType[listener.eventName];\r\n\r\n          // 从地图上删除\r\n          mapList.splice(index, 1);\r\n\r\n          // 检查我们是否已删除此事件类型的所有侦听器\r\n          if (mapList.length === 0) {\r\n            // 如有必要，删除实际的侦听器\r\n            this.element.removeEventListener(listener.eventName, this.#captureListener, true);\r\n            this.element.removeEventListener(listener.eventName, this.#bubbleListener, false);\r\n\r\n            // 为了提高性能，避免使用删除运算符\r\n            this.#listenersByType[listener.eventName] = null;\r\n          }\r\n        }\r\n        else {\r\n          utils.throw_Error('事件存在于allEvents中，但不存在于listenersByType中')\r\n        }\r\n        // 现在别停下来！ 我们要删除所有匹配的监听器，所以继续循环\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  destroy() {\r\n    if (this.destroyed) {\r\n      // 实例已被销毁，不执行任何操作\r\n      return;\r\n    }\r\n\r\n    // 移除所有的事件\r\n    this.off();\r\n\r\n    // 删除所有引用\r\n    this.#listenersByType = null;\r\n    this.#allListeners = null;\r\n    this.element = null;\r\n    this.destroyed = true;\r\n  }\r\n\r\n\r\n\r\n  dispatch(eventName, options) {\r\n    options = options || {};\r\n\r\n    if (typeof options.bubbles === 'undefined') {\r\n      options.bubbles = true;\r\n    }\r\n\r\n    if (typeof options.cancelable === 'undefined') {\r\n      options.cancelable = true;\r\n    }\r\n\r\n    const event = new CustomEvent(eventName, options);\r\n    this.element.dispatchEvent(event);\r\n\r\n    return event;\r\n  }\r\n\r\n\r\n\r\n  #listenerMatchesRootTarget(listener, target) {\r\n    return (\r\n      // 当没有提供选择器时\r\n      listener.selector === null &&\r\n      (\r\n        // 如果我们已经到达根目录则执行\r\n        target === this.element\r\n      )\r\n    );\r\n  }\r\n\r\n  #listenerMatchesDelegateTarget(listener, target) {\r\n\r\n    return (\r\n      // 文档不支持 matches()\r\n      target !== document &&\r\n      // 不要为根元素上的委托而烦恼\r\n      target !== this.element &&\r\n      // 检查事件是否被委托\r\n      listener.selector !== null &&\r\n      // 仅当选择器匹配时才执行\r\n      (\r\n        // 检查选择器是否有上下文\r\n        listener.isScoped ?\r\n          // 使用根元素的 ID 运行匹配\r\n          Element.prototype.matches.call(target, `[${this.#idKey}=\"${this.#id}\"] ` + listener.selector)\r\n          // 在没有上下文的情况下运行比赛\r\n          : Element.prototype.matches.call(target, listener.selector)\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n  #listenerMatchesEventPhase(listener, useCapture) {\r\n    // 检查事件是否处于正确的阶段\r\n    return (listener.useCapture === useCapture);\r\n  }\r\n\r\n\r\n  #executeListenersAtElement(target, listeners, event, useCapture) {\r\n    let listener;\r\n    let returnValue;\r\n\r\n    // 执行每个满足条件的监听器\r\n    executeListeners: for (let listenerIndex = 0; listenerIndex < listeners.length; listenerIndex++) {\r\n      listener = listeners[listenerIndex];\r\n\r\n      if (\r\n        // 不处理禁用项目 #1 上的事件\r\n        !(event.type === 'click' && target.disabled === true)\r\n        &&\r\n        // 检查目标元素是否与此侦听器匹配\r\n        (\r\n          this.#listenerMatchesRootTarget(listener, target) ||\r\n          this.#listenerMatchesDelegateTarget(listener, target)\r\n        ) &&\r\n        this.#listenerMatchesEventPhase(listener, useCapture)\r\n      ) {\r\n        // 存储当前与事件匹配的目标\r\n        event.matchedTarget = target;\r\n\r\n        // 在委托目标范围内调用处理程序，传递事件\r\n        returnValue = listener.handler.call(target, event);\r\n\r\n        // 如果处理程序返回 false，则阻止 default 和 stopPropagation\r\n        if (returnValue === false) {\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n\r\n        if (event[this.#stopImmediatePropagationKey]) {\r\n          // 不再处理任何事件处理程序并停止冒泡\r\n          break executeListeners;\r\n        }\r\n      } // 结束 if\r\n    } // 结束执行监听器\r\n  }\r\n\r\n\r\n\r\n  #executeBubbleListener(event) {\r\n    let listeners = this.#listenersByType[event.type];\r\n\r\n    if (!listeners) {\r\n      utils.throw_Error(`_executeListeners 被调用以响应\"${event.type}\"，但我们没有监听它`)\r\n    }\r\n\r\n    if (listeners.length) {\r\n      // 获取听众的副本\r\n      // 如果没有这个，删除回调内的事件将导致错误\r\n      listeners = listeners.slice();\r\n\r\n      // 装饰事件对象，以便我们知道何时调用 stopPropagation\r\n      this.#decorateEvent(event);\r\n\r\n      /*\r\n        弄清楚是否应该模拟气泡相\r\n\r\n        对焦和模糊都不会起泡:\r\n          https://developer.mozilla.org/en-US/docs/Web/Events/focus\r\n          https://developer.mozilla.org/en-US/docs/Web/Events/blur\r\n\r\n        然而，聚焦、聚焦、变化和其他事件却如此。\r\n      */\r\n      let shouldBubble = event.type !== 'focus' && event.type !== 'blur';\r\n\r\n      // 重新使用捕获阶段计算出的事件路径\r\n      let eventPath = this.#getPath(event);\r\n\r\n      // 如果侦听器仍然存在且传播未停止，则通过冒泡目标列表来模拟冒泡阶段\r\n      bubbleUp: for (let eventPathIndex = 0; eventPathIndex < eventPath.length; eventPathIndex++) {\r\n        if (!listeners.length) {\r\n          // 如果没有更多侦听器要执行，请停止冒泡\r\n          break bubbleUp;\r\n        }\r\n\r\n        let currentTargetElement = eventPath[eventPathIndex];\r\n        this.#executeListenersAtElement(currentTargetElement, listeners, event, false);\r\n\r\n        // 如果处理程序告诉我们，请停止模拟气泡阶段\r\n        if (\r\n          event[this.#stopImmediatePropagationKey] ||\r\n          event[this.#stopPropagationKey]\r\n        ) {\r\n          break bubbleUp;\r\n        }\r\n\r\n        // 如果事件不应该冒泡，则仅在目标上模拟它\r\n        if (!shouldBubble) {\r\n          break bubbleUp;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 排气后清理\r\n    this.#undecorateEvent(event);\r\n\r\n    // 清除路径\r\n    event[this.#pathKey] = null;\r\n  }\r\n\r\n\r\n  #executeCaptureListener(event) {\r\n\r\n\r\n    let listeners = this.#listenersByType[event.type];\r\n\r\n    if (!listeners) {\r\n      utils.throw_Error(`_executeListeners 被调用以响应${event.type},但我们没有监听它`)\r\n    }\r\n\r\n    if (listeners.length) {\r\n      // 获取听众的副本\r\n      // 如果没有这个，删除回调内的事件将导致错误\r\n      listeners = listeners.slice();\r\n\r\n      // 装饰事件对象，以便我们知道何时调用 stopPropagation\r\n      this.#decorateEvent(event);\r\n\r\n      // 通过 DOM 获取事件的路径\r\n      let eventPath = this.#getPath(event);\r\n\r\n      // 通过向下滴入目标列表来模拟捕获阶段\r\n      trickleDown: for (let eventPathIndex = eventPath.length - 1; eventPathIndex >= 0; eventPathIndex--) {\r\n        if (!listeners.length) {\r\n          // 如果没有更多的侦听器要执行，请停止滴流\r\n          break trickleDown;\r\n        }\r\n\r\n        let currentTargetElement = eventPath[eventPathIndex];\r\n        this.#executeListenersAtElement(currentTargetElement, listeners, event, true);\r\n\r\n        // console.log(this,event);\r\n\r\n        // 如果处理程序告诉我们停止向下滴入 DOM，则停止\r\n        if (\r\n          event[this.#stopImmediatePropagationKey] ||\r\n          event[this.#stopPropagationKey]\r\n        ) {\r\n          // 停止模拟滴流\r\n          break trickleDown;\r\n        }\r\n      }\r\n    }\r\n\r\n    // 排气后清理\r\n    // 如果事件到达那里，我们将在冒泡阶段重新装饰事件对象\r\n    this.#undecorateEvent(event);\r\n  }\r\n\r\n\r\n\r\n\r\n  #decorateEvent(event) {\r\n    let that = this;\r\n\r\n    event.stopPropagation = function () {\r\n      this[that.#stopPropagationKey] = true\r\n      Event.prototype.stopPropagation.call(this);\r\n    };\r\n\r\n\r\n    event.stopImmediatePropagation = function () {\r\n      this[that.#stopImmediatePropagationKey] = true;\r\n      Event.prototype.stopImmediatePropagation.call(this);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  #undecorateEvent(event) {\r\n    event.stopPropagation = Event.prototype.stopPropagation;\r\n    event.stopImmediatePropagation = Event.prototype.stopImmediatePropagation;\r\n  }\r\n\r\n\r\n  #getPath(event) {\r\n\r\n    if (event[this.#pathKey]) {\r\n      return event[this.#pathKey];\r\n    }\r\n\r\n    // 如果事件在文本节点上触发，委托应假定目标是其父节点\r\n    let target = event.target;\r\n    if (target.nodeType === Node.TEXT_NODE) {\r\n      target = target.parentNode;\r\n    }\r\n\r\n    // 在根和调度事件的元素之间构建 DOM 树的数组\r\n    // HTML 规范规定，如果树在调度期间被修改，事件应该像之前一样冒泡\r\n    // 在调度之前构建此列表允许我们模拟该行为\r\n    let pathEl = target;\r\n    let eventPath = [];\r\n    buildPath: while (pathEl && pathEl !== this.element) {\r\n      eventPath.push(pathEl);\r\n      pathEl = pathEl.parentNode;\r\n    }\r\n    eventPath.push(this.element);\r\n    event[this.#pathKey] = eventPath;\r\n\r\n    return eventPath;\r\n  }\r\n\r\n\r\n  #isScoped(selector) {\r\n    return selector && this.#scopedSelectorRegex.test(selector);\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Delegateify\r\n"],"names":["throw_Error","msg","Error","contains","set","subSet","i","length","indexOf","contains2","every","item","includes","_namespace","_classPrivateFieldLooseKey","_id","_scopedSelectorRegex","_listenersByType","_allListeners","_idKey","_pathKey","_stopPropagationKey","_stopImmediatePropagationKey","_captureListener","_bubbleListener","_listenerMatchesRootTarget","_listenerMatchesDelegateTarget","_listenerMatchesEventPhase","_executeListenersAtElement","_executeBubbleListener","_executeCaptureListener","_decorateEvent","_undecorateEvent","_getPath","_isScoped","Delegateify","constructor","selector","Object","defineProperty","value","_isScoped2","_getPath2","_undecorateEvent2","_decorateEvent2","_executeCaptureListener2","_executeBubbleListener2","_executeListenersAtElement2","_listenerMatchesEventPhase2","_listenerMatchesDelegateTarget2","_listenerMatchesRootTarget2","element","writable","_classPrivateFieldLooseBase","document","querySelector","create","bind","on","eventName","handler","useCapture","utils","namespaces","dotIndex","slice","split","listenerList","addEventListener","listenerIsScoped","replace","scopedSelectorRegex","setAttribute","eventObject","isScoped","push","off","listener","index","listeners","splice","mapList","removeEventListener","destroy","destroyed","dispatch","options","bubbles","cancelable","event","CustomEvent","dispatchEvent","target","Element","prototype","matches","call","returnValue","executeListeners","listenerIndex","type","disabled","matchedTarget","preventDefault","stopPropagation","shouldBubble","eventPath","bubbleUp","eventPathIndex","currentTargetElement","trickleDown","that","Event","stopImmediatePropagation","nodeType","Node","TEXT_NODE","parentNode","pathEl","test"],"mappings":"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"}